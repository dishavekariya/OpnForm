name: OpnForm CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-php-tests:
    name: Laravel Backend (PHP)
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: opnform_test
          MYSQL_USER: opnform
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, mysql, xml
          coverage: none

      - name: Install Composer dependencies
        working-directory: ./api
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env and generate key
        working-directory: ./api
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Run migrations
        working-directory: ./api
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: opnform_test
          DB_USERNAME: opnform
          DB_PASSWORD: password
        run: php artisan migrate --force

      - name: Run PHPUnit tests
        working-directory: ./api
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: opnform_test
          DB_USERNAME: opnform
          DB_PASSWORD: password
        run: ./vendor/bin/phpunit

  nuxt-client-tests:
    name: Nuxt Frontend (Node.js)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Build client
        working-directory: ./client
        run: npm run build

      - name: Run client tests (if any)
        working-directory: ./client
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test
          else
            echo "No client tests defined."
          fi
